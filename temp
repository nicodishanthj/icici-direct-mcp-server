Input Parameters
StandardPinRoutineRequest
pinFunction                     : Character(1)
    Valid values: 'G' = Generate PINs, 'S' = Scramble PINs

scrambleSenderFields            : Group (required when pinFunction = 'S')
    pssKey1                     : Numeric(8) - First scrambling key
    pssPinOffset1               : Group
        pssPin1                 : Numeric(4) - First PIN component
        pssOffset1              : Numeric(4) - First offset component
    pssKey2                     : Numeric(8) - Second scrambling key  
    pssPinOffset2               : Group
        pssPin2                 : Numeric(4) - Second PIN component
        pssOffset2              : Numeric(4) - Second offset component

executionContext                : Group
    executionMode               : Character(12) - "BATCH" or "INTERACTIVE"
    jobNumber                   : Character(8) - System job identifier
    userId                      : Character(8) - User identification
    programName                 : Character(8) - Calling program name

Output Parameters
StandardPinRoutineResponse
returnStatus                    : Character(2)
    '00' = Success              - Operation completed successfully
    '01' = Invalid Function     - Invalid function code provided
    '02' = Data Missing         - Required data missing or invalid
    '99' = Processing Error     - General processing error occurred

generateReturnFields            : Group (populated when pinFunction = 'G')
    pgrPin1                     : Numeric(4) - Generated PIN 1
    pgrPin2                     : Numeric(4) - Generated PIN 2

scrambleReturnFields            : Group (populated when pinFunction = 'S')
    psrPinOffset1               : Numeric(8) - Scrambled result 1
    psrPinOffset2               : Numeric(8) - Scrambled result 2

systemInfo                      : Group (optional audit information)
    jobName                     : Character(8) - Process identifier
    jobNumber                   : Character(8) - Generated job number
    userId                      : Character(8) - User identification
    executionMode               : Character(12) - Processing mode
    processingTimestamp         : Numeric(18) - Processing time
    isBatchMode                 : Boolean - Batch execution indicator

Business Process Flow
PR1 - Process Entry Point
Initialize processing environment and validate input parameters for completeness and format compliance.
PR2 - Function Validation
Validate the PIN function code and ensure all required data fields are present based on the requested operation type.
PR3 - System Context Collection
Collect system information including timing data, user context, and execution environment for audit purposes.
PR4 - Operation Execution
Execute the requested PIN operation (generation or scrambling) based on validated input parameters.
PR5 - Result Validation
Validate processing results meet format requirements and business rules before preparing response.
PR6 - Response Preparation
Prepare response structure with appropriate return status and populate relevant output fields.
PR7 - Process Completion
Complete processing and return results to calling application or service.

Step-by-Step Logic Flow
1: Initialize Processing Environment

Set default return status to success ('00')
Initialize response structure
Prepare error handling context

2: Validate Input Parameters

Verify pinFunction contains valid value ('G' or 'S')
IF pinFunction = 'S' THEN validate scramble sender fields are present
IF pinFunction = 'G' THEN validate execution context is present
IF validation fails THEN set returnStatus = '02' and exit

3: Collect System Information

Generate unique job identifier from current timestamp
Extract user context from execution parameters
Determine execution mode (batch vs interactive)
Calculate high-precision timing values for entropy

4: Execute Requested Operation

EVALUATE pinFunction:

WHEN 'G': Execute PIN Generation Process (Step 5)
WHEN 'S': Execute PIN Scrambling Process (Step 6)
WHEN OTHER: Set returnStatus = '01' and exit



5: PIN Generation Process (IF pinFunction = 'G')
5.1: Initialize Random Number Generator
    - IF first execution in session THEN
        - Calculate entropy seed from system sources
        - IF executionMode = 'BATCH' THEN
            - Extract 5-character seed from jobNumber positions 4-8
        - ELSE  
            - Extract 5-character seed from timing value positions 11-15
        - Initialize random generator with calculated seed
        - Mark initialization complete

5.2: Generate PIN Values
    - Generate first random number between 0.0 and 1.0
    - Generate second random number between 0.0 and 1.0
    - Scale first random: pin1Value = randomNumber1 × 10000
    - Scale second random: pin2Value = randomNumber2 × 10000
    
5.3: Format Output Values
    - Format pin1Value as 4-digit string with leading zeros → pgrPin1
    - Format pin2Value as 4-digit string with leading zeros → pgrPin2
    - Populate generateReturnFields in response

6: PIN Scrambling Process (IF pinFunction = 'S')
6.1: Validate Scrambling Input
    - Verify pssKey1 is 8-digit numeric field
    - Verify pssKey2 is 8-digit numeric field
    - Verify all PIN and offset components are 4-digit numeric
    - Verify key digits are in range 1-8 for valid indexing
    - IF any validation fails THEN set returnStatus = '02' and exit

6.2: Execute First Scrambling Pass
    - Combine pssPin1 and pssOffset1 into 8-character input string
    - Create 8-position result array
    - FOR position = 1 to 8:
        - Extract key digit from pssKey1 at current position
        - Use key digit as target array index
        - Move character from input position to result target index
    - Convert result array to psrPinOffset1

6.3: Execute Second Scrambling Pass  
    - Combine pssPin2 and pssOffset2 into 8-character input string
    - Create 8-position result array
    - FOR position = 1 to 8:
        - Extract key digit from pssKey2 at current position
        - Use key digit as target array index
        - Move character from input position to result target index
    - Convert result array to psrPinOffset2
    - Populate scrambleReturnFields in response

7: Result Validation and Response Preparation
7.1: Validate Processing Results
    - IF pinFunction = 'G' THEN verify both PIN values are 4-digit numeric
    - IF pinFunction = 'S' THEN verify both scrambled results are 8-character
    - IF validation fails THEN set returnStatus = '99'
        
7.2: Prepare Final Response
    - Set appropriate return fields based on operation type
    - Include system information for audit trail
    - Ensure sensitive data is properly handled
    
7.3: Complete Processing
    - Finalize response structure
    - Return control with completed response
8: Error Handling Throughout Process

8.1: Input Validation Errors
    - Missing or invalid pinFunction → returnStatus = '01'
    - Missing required fields → returnStatus = '02'
    - Invalid field formats → returnStatus = '02'
    
8.2: Processing Errors
    - Random number generation failure → returnStatus = '99'
    - Invalid scrambling key values → returnStatus = '02'
    - Array index out of bounds → returnStatus = '99'
    
8.3: System Errors  
    - Memory allocation issues → returnStatus = '99'
    - System timing access failure → returnStatus = '99'
    - Unexpected processing exceptions → returnStatus = '99'

Data Validation Rules

Input Field Validation

pinFunction validation:
    - Must be exactly 1 character
    - Must be 'G' or 'S' only
    - Case sensitive validation
    - Required field

Scramble key validation (when pinFunction = 'S'):
    - Must be exactly 8 digits
    - Each digit must be 1-8 (for array indexing)
    - No leading/trailing spaces
    - Required for scrambling operations

PIN/Offset component validation (when pinFunction = 'S'):
    - Must be exactly 4 digits each
    - Only numeric characters allowed
    - Leading zeros permitted
    - Required for scrambling operations

Execution context validation (when pinFunction = 'G'):
    - executionMode must be 'BATCH' or 'INTERACTIVE'
    - jobNumber required for batch mode (8 characters)
    - userId recommended but not required

Output Field Validation
Return status validation:
    - Must be exactly 2 characters
    - Must be '00', '01', '02', or '99'
    - Always present in response

Generated PIN validation:
    - Must be exactly 4 digits with leading zeros
    - Range 0000-9999
    - Only present when pinFunction = 'G' and returnStatus = '00'

Scrambled result validation:
    - Must be exactly 8 characters
    - Character set matches input data
    - Only present when pinFunction = 'S' and returnStatus = '00'
